apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: meal-planner
  name: event-store-service
  creationTimestamp: null
  labels:
    app: event-store
    version: v5
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-store
      version: v5
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: event-store
        version: v5
    spec:
      # @todo Add service account
      containers:
        - image: eventstore/eventstore:release-5.0.8
          imagePullPolicy: IfNotPresent
          name: event-store-service
          resources: {}
          volumeMounts:
            - name: pv-event-store-data
              mountPath: /var/lib/eventstore
          ports:
            - containerPort: 1113
            - containerPort: 2113
      volumes:
        - name: pv-event-store-data
          persistentVolumeClaim:
            claimName: pvc-event-store-data
status: {}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: meal-planner
  name: pv-event-store-data
  labels:
    app: event-store
    service: event-store
spec:
  volumeMode: Filesystem
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/event-store-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: meal-planner
  name: pvc-event-store-data
  labels:
    app: event-store
    service: event-store
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  namespace: meal-planner
  name: event-store-service
  labels:
    app: event-store
    service: event-store
spec:
  selector:
    app: event-store
  ports:
    - name: tcp-client-api
      protocol: TCP
      port: 1113
      targetPort: 1113
    - name: http-admin-ui
      protocol: TCP
      port: 2113
      targetPort: 2113
